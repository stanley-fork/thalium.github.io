<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on THALIUM</title><link>/tags/android/</link><description>Recent content in Android on THALIUM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright (c) 2020, all rights reserved.</copyright><lastBuildDate>Tue, 20 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Leveraging Android Permissions: A Solver Approach</title><link>/posts/leveraging-android-permissions/</link><pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate><guid>/posts/leveraging-android-permissions/</guid><description>&lt;p>The Android permission management system has already suffered from several vulnerabilities in the past. Such weaknesses can grant dangerous permissions to a malevolent application, an example being &lt;code>CALL_LOG&lt;/code>, which gives access to all incoming and outgoing calls.&lt;/p>
&lt;p>This post dives into the Android permission system and how a solver was leveraged to find new vulnerabilities. With this approach, a privilege escalation was identified, which was fixed and assigned CVE-2023-20947 by Google.&lt;/p></description></item><item><title>The Fuzzing Guide to the Galaxy: An Attempt with Android System Services</title><link>/posts/fuzzing-samsung-system-services/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/fuzzing-samsung-system-services/</guid><description>Although the Android base is open source, many different constructors customize it with their own UIs and APIs. All these additions represent an extra attack surface that can change from one phone model to another. We tried to automatically fuzz the closed-source system services powering these modifications, discovering &lt;code>CVE-2022-39907&lt;/code> and &lt;code>CVE-2022-39908&lt;/code> along the way.</description></item><item><title>ARM TrustZone: pivoting to the secure world</title><link>/posts/pivoting_to_the_secure_world/</link><pubDate>Fri, 24 Mar 2023 13:37:00 +0000</pubDate><guid>/posts/pivoting_to_the_secure_world/</guid><description>&lt;ol>
&lt;li>Discovery of two vulnerabilities in secure world components&lt;/li>
&lt;li>Exploitation to get code execution in a trusted driver, while not having a debugger for this obscure environment&lt;/li>
&lt;li>Leverage of aarch32 T32 instruction set to find nice stack pivots&lt;/li>
&lt;li>Turning an arbitrary write into an arbitrary code execution&lt;/li>
&lt;/ol></description></item></channel></rss>