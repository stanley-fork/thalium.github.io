<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RCE on THALIUM</title><link>/tags/rce/</link><description>Recent content in RCE on THALIUM</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright (c) 2024, all rights reserved.</copyright><lastBuildDate>Mon, 04 Dec 2023 08:00:00 +0000</lastBuildDate><atom:link href="/tags/rce/index.xml" rel="self" type="application/rss+xml"/><item><title>Achieving Remote Code Execution in Steam: a journey into the Remote Play protocol</title><link>/posts/achieving-remote-code-execution-in-steam-remote-play/</link><pubDate>Mon, 04 Dec 2023 08:00:00 +0000</pubDate><guid>/posts/achieving-remote-code-execution-in-steam-remote-play/</guid><description>&lt;p>&lt;em>Remote Play Together&lt;/em>, developed by Valve, allows sharing local multi-player games with friends over the network through streaming. The associated protocol is elaborate enough to shelter a valuable attack surface that has scarcely been ventured into in the past.&lt;/p>
&lt;p>This post covers the reverse engineering of the protocol and client/server implementations inside Steam, before presenting a dedicated fuzzer that unveiled a few critical vulnerabilities.&lt;/p></description></item><item><title>Remote Deserialization Bug in Microsoft's RDP Client through Smart Card Extension (CVE-2021-38666)</title><link>/posts/deserialization-bug-through-rdp-smart-card-extension/</link><pubDate>Fri, 10 Dec 2021 06:00:01 +0100</pubDate><guid>/posts/deserialization-bug-through-rdp-smart-card-extension/</guid><description>&lt;p>This is the &lt;strong>third installment&lt;/strong> in my three-part series of articles on fuzzing Microsoft&amp;rsquo;s RDP client, where I explain a bug I found by fuzzing the &lt;strong>smart card extension&lt;/strong>.&lt;/p></description></item></channel></rss>